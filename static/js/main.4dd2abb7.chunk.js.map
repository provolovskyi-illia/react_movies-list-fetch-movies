{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","Api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onMovies","useState","value","setValue","errorFind","setError","previewMovie","setMovie","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","input","onChange","target","onClick","fetch","then","response","ok","Error","status","statusText","json","data","Response","Title","Plot","Poster","imdbID","newMovie","App","setMovies","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4dd2abb7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nimport { getData } from '../../Api';\n\nexport const FindMovie = ({ onMovies }) => {\n  const [value, setValue] = useState('');\n  const [errorFind, setError] = useState(false);\n  const [previewMovie, setMovie] = useState(null);\n\n  const getFilm = () => {\n    getData(value)\n      .then((data) => {\n        if (data.Response === 'False') {\n          return setError(true);\n        }\n\n        const {\n          Title,\n          Plot,\n          Poster,\n          imdbID,\n        } = data;\n\n        const newMovie = {\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        };\n\n        return setMovie(newMovie);\n      });\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setError(false);\n  };\n\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    onMovies(previewMovie);\n\n    setValue('');\n    setError(false);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handlerSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={value}\n              placeholder=\"Enter a title to search\"\n              className={classNames({\n                input: true,\n                'is-danger': errorFind,\n              })}\n              onChange={handleChange}\n            />\n          </div>\n\n          {errorFind\n          && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )\n        }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {previewMovie\n      && (\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...previewMovie} />\n      </div>\n      )\n    }\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onMovies: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=63b7bbcd&t=';\n\nexport function getData(title) {\n  return fetch(`${BASE_URL}${title}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addmovies = (newMovie) => {\n    if (movies.find(({ imdbId }) => imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies(() => [...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onMovies={addmovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}